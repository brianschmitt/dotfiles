[user]
    name = Brian Schmitt
    useConfigOnly = true

[alias]
    alias = config --global --includes --get-regexp alias
    branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
    changes = "!f() { git diff $(git default-branch); }; f"
    ca = commit --amend --no-edit
    cleanup = "!f() { git branch --merged $(git default-branch) | rg -v " $(git default-branch)" | xargs git branch -d; }; f"
    co = checkout
    cob = checkout -b
    com = "!f() { git checkout $(git default-branch); }; f" # checkout main|master
    conflicts = !git ls-files -u | cut -f 2 | sort -u
    dc = diff --cached
    default-branch = "!git symbolic-ref refs/remotes/origin/HEAD | cut -f4 -d/"
    df = diff --color --color-words --abbrev
    dh = diff HEAD~1
    fo = fetch origin
    ignored = ls-files -o -i --exclude-standard # Show files ignored by git
    la = log --pretty=lg --date=relative --graph --all
    lg = log --pretty=lg --date=relative --graph
    ll = log --pretty=lg --numstat
    prune = remote update --prune
    rom = "!f() { git pull --rebase origin $(git default-branch); }; f"
    st = status -sb
    stash = stash --include-untracked
    uncommit = reset --soft HEAD^
    undo = "!f() { git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}}; }; f"
    up = !git pull --rebase --prune $@ && git submodule update --init --recursive
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
# operate on multiple repo
    lab = "!f() { find . -name .git -type d 2>/dev/null|while read -r l;do (pushd "$l/../"&&git branches &&git status -sb&&popd > /dev/null);echo;done }; f"
    pullall = "!f() { find . -name .git -type d 2>/dev/null|while read -r l;do (pushd \"$l/../\"&&git pull&&git status -sb&&popd > /dev/null);echo;done }; f"
    unsynced = "!f() { find . -name .git -type d 2>/dev/null|while read -r l;do (pushd \"$l/../\"&&git fetch&&git status -sb&&popd > /dev/null);echo;done }; f"

[color]
    ui = auto
[core]
    editor = vim
    excludesfile = ~/.global_ignore
    filemode = false
[diff]
    tool = vscode
[difftool "vscode"]
    cmd = "code --wait --diff $LOCAL $REMOTE"
[fetch]
    prune = true
[filter "lfs"]
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
[help]
    autocorrect = 1
[init]
	defaultBranch = main
[merge]
    tool = vscode
[mergetool "vscode"]
    cmd = "code --wait $MERGED"
[pretty]
    lg = %x09%C(yellow)%h %C(reset)%s %C(green)(%cr) %C(bold blue)<%cn> %C(red)%d%C(reset)
[pull]
    rebase = true
[push]
    default = current
[rebase]
    autosquash = true
    autoStash = true
[status]
    showUntrackedFiles = all